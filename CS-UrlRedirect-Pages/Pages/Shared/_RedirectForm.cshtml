@using CS_UrlRedirect_Pages;
@model CS_UrlRedirect_Pages.Models.RedirectViewModel
@*
    data-ajax-confirm="Are you sure you want to do this?"
*@

<h4>
    @(Model.action == Models.RedirectViewModel.Action.Create ?
                                                 "Add" : "Update") Redirect
</h4>

<form asp-page="Save"
      data-ajax="true" data-ajax-success="formValidation.onSuccess" data-ajax-failure="formValidation.onFailure"
      data-ajax-complete="formValidation.onComplete"
      data-ajax-url="@Url.Page("Save")">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input asp-for="action" type="hidden" />
    <input asp-for="Id" type="hidden" />
    <div class="form-group">
        <label asp-for="ShortCode" class="control-label"></label>
        <input asp-for="ShortCode" class="form-control" autocomplete="off" />
        <span asp-validation-for="ShortCode" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Url" class="control-label"></label>
        <input asp-for="Url" class="form-control" autocomplete="off" />
        <span asp-validation-for="Url" class="text-danger"></span>
    </div>
    <div class="form-group">
        @if (Model.action == Models.RedirectViewModel.Action.Update)
        {
            <input type="submit" value="❌ Cancel" formnovalidate class="cancel btn btn-secondary"
                   onclick="location.href='@Url.Page("Index")'" />
        }
        <input type="submit" value="@(Model.action == Models.RedirectViewModel.Action.Create ?
                                                 "➕ Add" : "💾 Update") Redirect" class="btn btn-primary" />
    </div>
</form>


<script>
    var formValidation = formValidation || {};
    (function (ns) {
        if (ns.init) {
            return;
        }
        ns.$container = $('#redirect-form-container');

        ns.onSuccess = function (result) {
            //alert('success');

            if (result.redirectTo) {
                // The operation was a success on the server as it returned
                // a JSON object with an url property pointing to the location
                // you would like to redirect to => now use the window.location.href
                // property to redirect the client to this location
                //alert('Redirecting');
                window.location.href = result.redirectTo;
            } else {
                // The server returned a partial view => let's refresh
                // the corresponding section of our DOM with it
                //alert('Reloading');
                //console.log(result);
                ns.$container.html(result);
            }
        }
        ns.onFailure = function (xhr) {
            //alert('fail');
            //console.log(xhr);
        }
        ns.onComplete = function (xhr) {
            //alert('complete');
            //console.log(xhr);
            //ns.$container.html(xhr.responseText);
        };
        ns.init = true;
    })(formValidation);
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
